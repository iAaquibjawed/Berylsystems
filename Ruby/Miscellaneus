
Please note - I am using atom editor so some of commands outputs are not from terminal 


-> To print something on scene we have to functions

1.puts
2.print

1.puts -> it prints what ever you pass into it and also print new line

	ex- 3.0.1 :075 > puts "hello world"
	hello world
 	=> nil 
	3.0.1 :076 > puts "new"
	new
 	=> nil 
2.print -> it print two things next to each other

	ex-3.0.1 :077 > print "Hello World"
	Hello World => nil 
	3.0.1 :078 > print "new"
	new => nil 

  Note- on puts nil come on next line But with print nil come on same line

->how puts function work

puts "     / |"
puts "    /  |"
puts "   /   |"
puts "  /    |"
puts " /     |"
puts "/______|"

     / |
    /  |
   /   |
  /    |
 /     |
/______|

-> print with variables

	ex- name = "Sam"

age ="21"

	puts ("Hello my is " +name+ " Thank you")
	puts ("i am " + age +" years old" )

 	Hello my is Sam Thank you
	i am 21 years old

  Note - if you printing a string with variable inside it enclose it in parentheses, else   
         get an error


->Data types in Ruby as beginners 

1.String
2.Numbers- 2.1-Integers 
	   2.2-Floats
3.Boolean- it's either true or false 


->get input from user

puts "Please enter your name "
 name = gets

 puts ("Hello "+ name)
dmin@admins-iMac Ruby % ruby practice.rb
Hello my is Sam Thank you
i am 21 years old
Please enter your name
sam
Hello sam

#puts ("Hello my is " +name+ " Thank you")
#puts ("i am " + age +" years old" )
puts "please enter your name "
name = gets.chomp()
puts "please enter your age"
age =gets.chomp()

 puts ("Hello "+ name + " you are "+age+"old")

dmin@admins-iMac Ruby % ruby practice.rb
please enter your name
sam
please enter your age
21

puts "Enter the first number "

num1 = gets.chomp().to_i()

puts "Enter the second number "

num2 = gets.chomp().to_i()

puts(num1 + num2)
Enter the first number
4
Enter the second number
8
12 


Function 

3.0.1 :001 > def sayhello(name)
3.0.1 :002 >   print("Hello " + name)
3.0.1 :003 > end
 => :sayhello 
3.0.1 :005 > sayhello('sam')
Hello sam => nil 
3.0.1 :006 > sayhello('veer')
Hello veer => nil 

Note here function not return any thing that's why it gives us nil


3.0.1 :015 > def sum(num1, num2)
3.0.1 :016 >   return num1+ num2
3.0.1 :017 > end
 => :sum 
3.0.1 :018 > print(sum(1,2))
3 => nil 
3.0.1 :019 > sum(1,2)
 => 3 

if statement

3.0.1 :021 > eat = true
 => true 
3.0.1 :022 > not_eat = false
 => false 
3.0.1 :023 > 
3.0.1 :024 > if eat 
3.0.1 :025 >   puts "i am full"
3.0.1 :026 > else
3.0.1 :027 >   puts "i am starving"
3.0.1 :028 > end
i am full

function with if statement

3.0.1 :029 > def max(num1,num2,num3)
3.0.1 :030 >   if num1>=num2 and num1>=num3
3.0.1 :031 >     return  num1
3.0.1 :032 >   elsif num2>=num1 and num2>=num3
3.0.1 :033 >     return num2
3.0.1 :034 >   else 
3.0.1 :035 >     return num3
3.0.1 :036 >   end
3.0.1 :037 > end
 => :max 
3.0.1 :038 > max(5,2,9)
 => 9 
3.0.1 :039 > max(7,99,100)
 => 100 
