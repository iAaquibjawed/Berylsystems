String

->it is a sequence of character, lines paragraphs, tab, whitespace, etc

We use either double quotes ("string") or single quotes ('string') to represent the string


STRING: CONCATENATION- adding one string with other 

1.By using "+" operator

3.0.1 :022 > x= "Ruby"
 => "Ruby" 
3.0.1 :023 > y= "String"
 => "String" 
3.0.1 :024 > x+" "+y
 => "Ruby String" 
3.0.1 :025 > 

2.Appending methods- Here we append one string to other by using two less than symbol"<<"
3.0.1 :025 > x
 => "Ruby" 
3.0.1 :026 > x<<" String"
 => "Ruby String" 
3.0.1 :027 > x
 => "Ruby String" 
3.0.1 :028 > 

STRING MULTIPLICATION - We use multiplication operator to get numbers of same string from that string

3.0.1 :028 > "Hello World "*3
 => "Hello World Hello World Hello World " 

METHODS IN STRING

1. to_s -> convert into string
3.0.1 :034 > x=3
 => 3 
3.0.1 :035 > x.class
 => Integer 
3.0.1 :036 > x= x.to_s
 => "3" 
3.0.1 :037 > x.class
 => String 

2.to_i -> convert to integer
3.0.1 :038 > m = "5"
 => "5" 
3.0.1 :039 > m.class
 => String 
3.0.1 :040 > m= m.to_i
 => 5 
3.0.1 :041 > m.class
 => Integer 

4. Reverse -> reverse the string
3.0.1 :042 > x= "Hello World"
 => "Hello World" 
3.0.1 :043 > x.reverse
 => "dlroW olleH" 

5.Capitalize -> Make first character of sting capital
3.0.1 :044 > x= "hello world"
 => "hello world" 
3.0.1 :045 > x.capitalize
 => "Hello world" 

6. Upcase -> Convert every character of string to uppercase
3.0.1 :046 > x.upcase
 => "HELLO WORLD" 
3.0.1 :047 > 

7.Downcase -> Make every character lowercase

3.0.1 :048 > x= "HELLO WORLD"
 => "HELLO WORLD" 
3.0.1 :049 > x.downcase
 => "hello world" 
3.0.1 :050 > 

8.Length -> Give you a total no of character in string
3.0.1 :050 > x.length
 => 11 

STRING ESCAPING
 	-> we either represent string with singe as well as double quotes
	   but there is a problem if we use single or double quotes inside the string

3.0.1 :053'> 'book's'
3.0.1 :054'> 
3.0.1 :055 > '
/Users/admin/.rvm/rubies/ruby-3.0.1/lib/ruby/3.0.0/irb/workspace.rb:116:in `eval': (irb):53: syntax error, unexpected local variable or method, expecting end-of-input (SyntaxError)
'book's'
      ^
	from /Users/admin/.rvm/rubies/ruby-3.0.1/lib/ruby/gems/3.0.0/gems/irb-1.3.5/exe/irb:11:in `<top (required)>'
	from /Users/admin/.rvm/rubies/ruby-3.0.1/bin/irb:23:in `load'
	from /Users/admin/.rvm/rubies/ruby-3.0.1/bin/irb:23:in `<main>'

-> To overcome this error we use escape character (\) backslash

3.0.1 :056 > 'book\'s'
 => "book's" 
3.0.1 :001 > "The \"Earth\""
 => "The \"Earth\"" 
3.0.1 :002 > 

STRING CONTROL CHARACTER ->  we use backslash to define special character

1.\t -> Tab
3.0.1 :004 > puts "Hello\tWorld"
Hello	World
 => nil 

2.\n -> New line
3.0.1 :005 > puts "Hello\nWorld"
Hello
World
 => nil 

Note- This special control character not work with single quote

STRING INTERPOLATION -> insert something of different nature inside something else.

3.0.1 :006 > x = " Hello "
 => " Hello " 
3.0.1 :007 > puts "#{x}World"
 Hello World
 => nil 

-> We can also perform some process inside this interpolation
3.0.1 :008 > puts "#{x.reverse}World"
 olleH World
 => nil 

Note- This interpolation can not work with single quote