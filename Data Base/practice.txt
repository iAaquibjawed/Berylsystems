Last login: Fri Apr 30 14:44:27 on ttys000
admin@admins-iMac ~ % psql
psql (13.2)
Type "help" for help.

admin=# \c test
You are now connected to database "test" as user "admin".
test=# \d
              List of relations
 Schema |      Name       |   Type   | Owner 
--------+-----------------+----------+-------
 public | custo           | table    | admin
 public | customer        | table    | admin
 public | customer_id_seq | sequence | admin
(3 rows)

test=# select * from custo;
 id | first_name | last_name  |   gender    | salary |  country  
----+------------+------------+-------------+--------+-----------
  1 | Laurena    | Trase      | Female      |  32569 | Iran
  2 | Ingemar    | Syrad      | Polygender  |  30468 | Syria
  3 | Anton      | Asple      | Female      |  90025 | Portugal
  4 | Marti      | Higounet   | Non-binary  |  70710 | Poland
  5 | Townsend   | Spollen    | Female      |  95714 | Indonesia
  6 | Olia       | Roselli    | Female      |  75699 | Colombia
  7 | Allis      | Witheridge | Male        |  20494 | France
  8 | Kelbee     | Braben     | Non-binary  |  97507 | Mexico
  9 | Mame       | Gorries    | Male        |  57819 | Indonesia
 10 | Claire     | Terram     | Female      |  42183 | China
 11 | Adelheid   | Clewley    | Female      |  83710 | Russia
 12 | Burnard    | Perche     | Genderqueer |  83220 | China
(12 rows)

test=# select first_name, last_name from custo where salary=(select max(salary) from custo);
 first_name | last_name 
------------+-----------
 Kelbee     | Braben
(1 row)

test=# select * from custo where salary=(select max(salary) from custo);
 id | first_name | last_name |   gender   | salary | country 
----+------------+-----------+------------+--------+---------
  8 | Kelbee     | Braben    | Non-binary |  97507 | Mexico
(1 row)

test=# select count(*) from custo group by avg(salary);
ERROR:  aggregate functions are not allowed in GROUP BY
LINE 1: select count(*) from custo group by avg(salary);
                                            ^
test=# select avg(salary) from custo group by gender;
        avg         
--------------------
 83220.000000000000
 39156.500000000000
 84108.500000000000
 30468.000000000000
 69983.333333333333
(5 rows)

test=# select gender, avg(salary) from custo group by gender;
   gender    |        avg         
-------------+--------------------
 Genderqueer | 83220.000000000000
 Male        | 39156.500000000000
 Non-binary  | 84108.500000000000
 Polygender  | 30468.000000000000
 Female      | 69983.333333333333
(5 rows)

test=# select first_name, avg(salary) from custo group by first_name;
 first_name |        avg         
------------+--------------------
 Ingemar    | 30468.000000000000
 Anton      | 90025.000000000000
 Laurena    | 32569.000000000000
 Adelheid   | 83710.000000000000
 Allis      | 20494.000000000000
 Burnard    | 83220.000000000000
 Claire     | 42183.000000000000
 Olia       | 75699.000000000000
 Mame       | 57819.000000000000
 Kelbee     | 97507.000000000000
 Townsend   | 95714.000000000000
 Marti      | 70710.000000000000
(12 rows)

test=# select count(*), gender from custo group by gender;
 count |   gender    
-------+-------------
     1 | Genderqueer
     2 | Male
     2 | Non-binary
     1 | Polygender
     6 | Female
(5 rows)

test=# select gender, country, count(*) from custo group by country;
ERROR:  column "custo.gender" must appear in the GROUP BY clause or be used in an aggregate function
LINE 1: select gender, country, count(*) from custo group by country...
               ^
test=# select country, count(*) from custo group by country;
  country  | count 
-----------+-------
 Mexico    |     1
 Syria     |     1
 Indonesia |     2
 Poland    |     1
 Russia    |     1
 China     |     2
 Portugal  |     1
 Iran      |     1
 Colombia  |     1
 France    |     1
(10 rows)

test=# select gender, avg(salary) from custo group by gender;
   gender    |        avg         
-------------+--------------------
 Genderqueer | 83220.000000000000
 Male        | 39156.500000000000
 Non-binary  | 84108.500000000000
 Polygender  | 30468.000000000000
 Female      | 69983.333333333333
(5 rows)

test=# select gender, avg(salary) from custo group by gender having vg(salary)>80000;
ERROR:  function vg(numeric) does not exist
LINE 1: ...er, avg(salary) from custo group by gender having vg(salary)...
                                                             ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
test=# select gender, avg(salary) from custo group by gender having avg(salary)>80000;
   gender    |        avg         
-------------+--------------------
 Genderqueer | 83220.000000000000
 Non-binary  | 84108.500000000000
(2 rows)

test=# test=# create table practice(roll_no int primary key,
test(# frist_name varchar(50) not null,
test(# last_name varchar(50) not null, 
test(# branch varchar(50) not null);
CREATE TABLE
test=# \d
              List of relations
 Schema |      Name       |   Type   | Owner 
--------+-----------------+----------+-------
 public | custo           | table    | admin
 public | customer        | table    | admin
 public | customer_id_seq | sequence | admin
 public | practice        | table    | admin
(4 rows)

test=# drop table pracitice;
ERROR:  table "pracitice" does not exist
test=# drop table practice;
DROP TABLE
test=# \d
              List of relations
 Schema |      Name       |   Type   | Owner 
--------+-----------------+----------+-------
 public | custo           | table    | admin
 public | customer        | table    | admin
 public | customer_id_seq | sequence | admin
(3 rows)
test=#
test=# \d student
                                        Table "public.student"
   Column   |         Type          | Collation | Nullable |                 Default                  
------------+-----------------------+-----------+----------+------------------------------------------
 roll_no    | bigint                |           | not null | nextval('student_roll_no_seq'::regclass)
 first_name | character varying(50) |           | not null | 
 last_name  | character varying(50) |           | not null | 
 branch     | character varying(50) |           | not null | 
Indexes:
    "student_pkey" PRIMARY KEY, btree (roll_no)







library management system





admin=# \c test
You are now connected to database "test" as user "admin".
test=# \d 
                List of relations
 Schema |        Name         |   Type   | Owner 
--------+---------------------+----------+-------
 public | custo               | table    | admin
 public | customer            | table    | admin
 public | customer_id_seq     | sequence | admin
 public | student             | table    | admin
 public | student_roll_no_seq | sequence | admin
(5 rows)

test=# \d student
                                        Table "public.student"
   Column   |         Type          | Collation | Nullable |                 Default                  
------------+-----------------------+-----------+----------+------------------------------------------
 roll_no    | bigint                |           | not null | nextval('student_roll_no_seq'::regclass)
 first_name | character varying(50) |           | not null | 
 last_name  | character varying(50) |           | not null | 
 branch     | character varying(50) |           | not null | 
Indexes:
    "student_pkey" PRIMARY KEY, btree (roll_no)

test=# insert into student values('sam', 'malik', 'CSE');
ERROR:  invalid input syntax for type bigint: "sam"
LINE 1: insert into student values('sam', 'malik', 'CSE');
                                   ^
test=# insert into student values(1,'sam','malik', 'CSE');
INSERT 0 1
test=# select * from student;
 roll_no | first_name | last_name | branch 
---------+------------+-----------+--------
       1 | sam        | malik     | CSE
(1 row)

test=# insert into student values(2, 'sahil', 'malik', 'CSE'),(3,'aman','raj','CIVIL');
INSERT 0 2
test=# insert into student values(4,'akash','singh','CSE'),(5,'ayush','mithal','CSE'), (6,'Divyang','tanver','CSE');
INSERT 0 3
test=# select * from student;
 roll_no | first_name | last_name | branch 
---------+------------+-----------+--------
       1 | sam        | malik     | CSE
       2 | sahil      | malik     | CSE
       3 | aman       | raj       | CIVIL
       4 | akash      | singh     | CSE
       5 | ayush      | mithal    | CSE
       6 | Divyang    | tanver    | CSE
(6 rows)

test=# insert into student vaues(7,'Rahul','Kumar','MEC'),(8,'Junaid','anwer','CSE');
ERROR:  syntax error at or near "vaues"
LINE 1: insert into student vaues(7,'Rahul','Kumar','MEC'),(8,'Junai...
                            ^
test=# insert into student values(7,'Rahul','Kumar','MEC'),(8,'Junaid','anwer','CSE');
INSERT 0 2
test=# insert into studnet values(9,'Divya', 'Pratap','CSE'),(10,'Harsh','Ksann','CSE');
ERROR:  relation "studnet" does not exist
LINE 1: insert into studnet values(9,'Divya', 'Pratap','CSE'),(10,'H...
                    ^
test=# insert into student values(9,'Divya', 'Pratap','CSE'),(10,'Harsh','Ksann','CSE');
INSERT 0 2
test=# select * from student;
 roll_no | first_name | last_name | branch 
---------+------------+-----------+--------
       1 | sam        | malik     | CSE
       2 | sahil      | malik     | CSE
       3 | aman       | raj       | CIVIL
       4 | akash      | singh     | CSE
       5 | ayush      | mithal    | CSE
       6 | Divyang    | tanver    | CSE
       7 | Rahul      | Kumar     | MEC
       8 | Junaid     | anwer     | CSE
       9 | Divya      | Pratap    | CSE
      10 | Harsh      | Ksann     | CSE
(10 rows)

test=# create table Book(
test(# ISBN int primary key,
test(# Book_name varchar(50) not null,
test(# Autor varchar(50) not null);
CREATE TABLE
test=# \d Book;
                        Table "public.book"
  Column   |         Type          | Collation | Nullable | Default 
-----------+-----------------------+-----------+----------+---------
 isbn      | integer               |           | not null | 
 book_name | character varying(50) |           | not null | 
 autor     | character varying(50) |           | not null | 
Indexes:
    "book_pkey" PRIMARY KEY, btree (isbn)

test=# alter table Book add Quantity int not null;
ALTER TABLE
test=# \d Book
                        Table "public.book"
  Column   |         Type          | Collation | Nullable | Default 
-----------+-----------------------+-----------+----------+---------
 isbn      | integer               |           | not null | 
 book_name | character varying(50) |           | not null | 
 autor     | character varying(50) |           | not null | 
 quantity  | integer               |           | not null | 
Indexes:
    "book_pkey" PRIMARY KEY, btree (isbn)

test=# insert into Book values(101,'Data_base','Micheal_j',50);
INSERT 0 1
test=# select * from Book
test-# ;
 isbn | book_name |   autor   | quantity 
------+-----------+-----------+----------
  101 | Data_base | Micheal_j |       50
(1 row)
test=# update Book set quantity=5;
UPDATE 1
test=# select * from Book;
 isbn | book_name |   autor   | quantity 
------+-----------+-----------+----------
  101 | Data_base | Micheal_j |        5
(1 row)
test=# insert into Book values(102,'Linux','brain_ward',3),(102,'Linux','Daniel_J',2); 
ERROR:  duplicate key value violates unique constraint "book_pkey"
DETAIL:  Key (isbn)=(102) already exists.
test=# insert into Book values(102,'Linux','brain_ward',3),(103,'Linux','Daniel_J',2); 
INSERT 0 2
test=# insert into Book values(104,'Linux','William_E',6),(105,'Python','AI_sweigart',2),(106,'Python','Zed_Shaw',4);
INSERT 0 3
test=# select * from Book;
 isbn | book_name |    autor    | quantity 
------+-----------+-------------+----------
  101 | Data_base | Micheal_j   |        5
  102 | Linux     | brain_ward  |        3
  103 | Linux     | Daniel_J    |        2
  104 | Linux     | William_E   |        6
  105 | Python    | AI_sweigart |        2
  106 | Python    | Zed_Shaw    |        4
(6 rows)

test=# inert into Book values(107,'MySql','Derek_j',5),values(108,'Jon_Duckett',6);
ERROR:  syntax error at or near "inert"
LINE 1: inert into Book values(107,'MySql','Derek_j',5),values(108,'...
        ^
test=# insert into Book values(107,'MySql','Derek_j',5),values(108,'Jon_Duckett',6);
ERROR:  syntax error at or near "values"
LINE 1: insert into Book values(107,'MySql','Derek_j',5),values(108,...
                                                         ^
test=# insert into Book values(107,'MySql','Derek_j',5),(108,'Jon_Duckett',6);
ERROR:  VALUES lists must all be the same length
LINE 1: insert into Book values(107,'MySql','Derek_j',5),(108,'Jon_D...
                                                          ^
test=# insert into Book values(107,'MySql','Derek_j',5),(108,'MySql','Jon_Duckett',6); 
INSERT 0 2
test=# select * from Book;
 isbn | book_name |    autor    | quantity 
------+-----------+-------------+----------
  101 | Data_base | Micheal_j   |        5
  102 | Linux     | brain_ward  |        3
  103 | Linux     | Daniel_J    |        2
  104 | Linux     | William_E   |        6
  105 | Python    | AI_sweigart |        2
  106 | Python    | Zed_Shaw    |        4
  107 | MySql     | Derek_j     |        5
  108 | MySql     | Jon_Duckett |        6
(8 rows)

test=# 

